[{"D:\\Github projects\\forum\\client\\src\\index.js":"1","D:\\Github projects\\forum\\client\\src\\reportWebVitals.js":"2","D:\\Github projects\\forum\\client\\src\\App.js":"3","D:\\Github projects\\forum\\client\\src\\Contexts\\AppContext.js":"4","D:\\Github projects\\forum\\client\\src\\Components\\Navbar.js":"5","D:\\Github projects\\forum\\client\\src\\Pages\\Home.js":"6","D:\\Github projects\\forum\\client\\src\\Pages\\Signup.js":"7","D:\\Github projects\\forum\\client\\src\\Components\\FormErrors.js":"8","D:\\Github projects\\forum\\client\\src\\Components\\Button.js":"9","D:\\Github projects\\forum\\client\\src\\Pages\\Login.js":"10","D:\\Github projects\\forum\\client\\src\\Pages\\Profile.js":"11","D:\\Github projects\\forum\\client\\src\\Components\\PasswordModal.js":"12","D:\\Github projects\\forum\\client\\src\\Pages\\createPost.js":"13","D:\\Github projects\\forum\\client\\src\\Pages\\CreatePost.js":"14","D:\\Github projects\\forum\\client\\src\\Services\\HttpClient.js":"15","D:\\Github projects\\forum\\client\\src\\Pages\\ManagePost.js":"16","D:\\Github projects\\forum\\client\\src\\Pages\\PostDetail.js":"17","D:\\Github projects\\forum\\client\\src\\Components\\AddComment.js":"18","D:\\Github projects\\forum\\client\\src\\Components\\Rating.js":"19","D:\\Github projects\\forum\\client\\src\\Components\\Pagination.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":2253,"mtime":1607652944707,"results":"24","hashOfConfig":"22"},{"size":169,"mtime":1607410241048,"results":"25","hashOfConfig":"22"},{"size":2649,"mtime":1607557716224,"results":"26","hashOfConfig":"22"},{"size":1431,"mtime":1607651977795,"results":"27","hashOfConfig":"22"},{"size":3613,"mtime":1607552977309,"results":"28","hashOfConfig":"22"},{"size":346,"mtime":1607381649961,"results":"29","hashOfConfig":"22"},{"size":250,"mtime":1608153706433,"results":"30","hashOfConfig":"22"},{"size":2530,"mtime":1607557739112,"results":"31","hashOfConfig":"22"},{"size":662,"mtime":1607640930290,"results":"32","hashOfConfig":"22"},{"size":2948,"mtime":1607467751213,"results":"33","hashOfConfig":"22"},{"size":2201,"mtime":1607494148070,"results":"34","hashOfConfig":"22"},{"size":2257,"mtime":1607666038629,"results":"35","hashOfConfig":"22"},{"size":642,"mtime":1607643813867,"results":"36","hashOfConfig":"22"},{"size":2410,"mtime":1607656355233,"results":"37","hashOfConfig":"22"},{"size":3543,"mtime":1608187417133,"results":"38","hashOfConfig":"22"},{"size":1756,"mtime":1608161143971,"results":"39","hashOfConfig":"22"},{"size":632,"mtime":1608161372486,"results":"40","hashOfConfig":"22"},{"size":582,"mtime":1608162786083,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1uzs0h",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Github projects\\forum\\client\\src\\index.js",[],["96","97"],"D:\\Github projects\\forum\\client\\src\\reportWebVitals.js",[],"D:\\Github projects\\forum\\client\\src\\App.js",["98","99"],"import axios from \"axios\";\nimport React, { useState, useEffect } from 'react'\nimport AppContext from './Contexts/AppContext';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport Home from './Pages/Home';\nimport Navbar from \"./Components/Navbar\";\nimport Signup from \"./Pages/Signup\";\nimport Login from \"./Pages/Login\";\nimport Profile from \"./Pages/Profile\";\nimport CreatePost from \"./Pages/CreatePost\";\nimport HttpClient from \"./Services/HttpClient\";\nimport ManagePost from \"./Pages/ManagePost\";\nimport PostDetail from \"./Pages/PostDetail\";\n\n\nfunction App() {\n  \n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const [isInitiated, setIsInitiated] = useState(false);\n  const [user,setUser] = useState(null);  \n\n  const init = async () =>{\n    const token = localStorage.getItem('token');\n    const {data} = await HttpClient().get('/api/v1/user/index');\n    setUser(data.user);\n    setIsInitiated(true);\n  }\n\n  return (\n    <div>\n        {isInitiated && (\n          <AppContext.Provider value={{user,setUser}}>\n            <Router>\n              <Navbar />\n              <Switch>\n                <Route  path ='/home' exact>\n                  <Home />  \n                </Route>\n                  \n                <Route path = '/signup'>\n                  {!user ? <Signup /> : <Redirect to = '/' />}\n                </Route>\n\n                <Route path = '/login'>\n                  {!user ? <Login /> : <Redirect to = '/' />}\n                </Route>\n\n                <Route path = '/profile'>\n                  {user ? <Profile /> : <Redirect to = '/login' />}\n                </Route>\n\n                <Route path = '/create-posts'>\n                  {user ? <CreatePost /> : <Redirect to = '/login' />}\n                </Route>\n\n                <Route path = '/manage-posts'>\n                  {user ? <ManagePost /> : <Redirect to = '/login' />}\n                </Route>\n\n\n                <Route path = '/posts-detail/:id'>\n                  {user ? <PostDetail /> : <Redirect to = '/login' />}\n                </Route>\n\n                \n\n              </Switch>\n            </Router>\n          </AppContext.Provider>                                            \n        )}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Github projects\\forum\\client\\src\\Contexts\\AppContext.js",[],"D:\\Github projects\\forum\\client\\src\\Components\\Navbar.js",["100","101"],"import React, { Component, useContext} from 'react';\r\nimport logo from '../Images/logo.svg';\r\nimport {Link} from 'react-router-dom' ;\r\nimport AppContext from '../Contexts/AppContext';\r\nimport Button from '../Components/Button';\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const showNavbar =(e) =>{\r\n        const navbar_submenu = document.querySelector('.navbar_submenu');\r\n        if(navbar_submenu.style.display === 'none'){\r\n          navbar_submenu.style.display = 'block';\r\n        }else{\r\n          navbar_submenu.style.display = 'none';\r\n        }\r\n    };\r\n    const {user,setUser} = useContext(AppContext);\r\n\r\n    const logout = ()=>{\r\n        setUser(null);\r\n        localStorage.setItem('token', null);\r\n      };\r\n\r\n    \r\n    \r\n\r\n    return ( \r\n        <div className = \"navbar\">\r\n            {/* <img src={logo} className=\"navbar_logo\" alt=\"logo\"/> */}\r\n            <span className=\"navbar_logo\">iForum</span>\r\n\r\n            <ul className=\"navbar_list\">\r\n                <li className=\"navbar_item navbar_submenu-container\">\r\n                <button><Link to= '/home' className = \"navbar_link\">Home</Link></button>\r\n                </li>\r\n                \r\n\r\n               {!user ? <li className=\"navbar_item navbar_submenu-container\" onClick={showNavbar}>\r\n                    <button className=\"navbar_link\" >Account</button>\r\n                    <ul className=\"navbar_submenu\">\r\n                        <li className=\"navbar_submenu-item\">\r\n                            <Link to = '/login' className = \"navbar_submenu-link\">Log in</Link>\r\n                        </li>\r\n                        <li className=\"navbar_submenu-item\">\r\n                            <Link to = '/signup' className = \"navbar_submenu-link\">Sign up</Link>\r\n                        </li>\r\n                    </ul>\r\n                </li> :(<li className=\"navbar_item navbar_submenu-container\" onClick={showNavbar}>\r\n                    <button className=\"navbar_link\" >{user.username}</button>\r\n                    <ul className=\"navbar_submenu\">\r\n                        <li className=\"navbar_submenu-item\">\r\n                            <Link to = '/profile' className = \"navbar_submenu-link\">Profile</Link>\r\n                        </li>\r\n                        <li className=\"navbar_submenu-item\">\r\n                            <Button type='button' className=\"btn-logout\" logout={logout}>\r\n                                LogOut\r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n                </li>)}\r\n                \r\n                \r\n            </ul>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","D:\\Github projects\\forum\\client\\src\\Pages\\Home.js",["102","103"],"import React, { Component , useEffect, useState} from 'react';\r\nimport HttpClient from '../Services/HttpClient';\r\nimport moment from 'moment';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nconst  Home = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getPosts();    \r\n  }, []);\r\n\r\n    \r\n  const getPosts = async ()=>{\r\n      const res = await HttpClient().get('/api/v1/posts/show_posts');\r\n      const posts = res.data;\r\n      setPosts(posts);\r\n      };\r\n\r\n    return ( \r\n        <div className= \"page\">\r\n          <h1 className = \"page-title home\"> POSTS   </h1> \r\n          {          \r\n            posts.map((post,index)=>{\r\n\r\n            const time  = moment(post.createdAt).format('YYYY-MM-DD HH:mm:ss');\r\n            const when = moment(time).fromNow();\r\n            return (\r\n              <div key={index} className= \"post\">\r\n                <h3 className = \"navbar_submenu-link\" onClick={()=>{history.push(`/posts-detail/${post._id}`)}}>{post.title}</h3>\r\n                <div className =\"post_content\">{post.content}</div>\r\n                {/* <p>{index}</p> */}\r\n                <div className=\"post_tag\">\r\n                  <span>by {post.username}</span>\r\n                  <span> {when}</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n           \r\n          )}       \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","D:\\Github projects\\forum\\client\\src\\Pages\\Signup.js",["104","105","106"],"import React, { Component ,useState } from 'react';\r\nimport FormErrors from '../Components/FormErrors';\r\nimport validator from 'validator';\r\nimport Button from '../Components/Button';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HttpClient from '../Services/HttpClient';\r\n\r\nconst Signup = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordAgain, setPasswordAgain] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n    const [success, setSuccess] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        setErrors([]);\r\n        let _errors = [];\r\n        \r\n        if(!username){ _errors.push('Username is required!')}else{_errors.push(\"\")};\r\n        if(!password){ _errors.push('Password is required!')}else{_errors.push(\"\")};\r\n        if(!passwordAgain){ _errors.push('Password is required!')}else{_errors.push(\"\")};\r\n        if(password !== passwordAgain){_errors.push('Passwords must match')}else{_errors.push(\"\")};\r\n        \r\n        \r\n        const data = {\r\n            username:username,\r\n            password:password\r\n        };\r\n        \r\n        try {\r\n            const res = await HttpClient().post('/api/v1/user/signup',data);\r\n            setSuccess(res.data.message);\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            setPasswordAgain(\"\");\r\n            setTimeout(() => history.push('/login') , 1500);            \r\n        } catch (error) {\r\n            //console.log(error.response)\r\n            const message = error.response.data.message;\r\n            if (message === \"username_exists\") {\r\n                _errors.push('USERNAME ALREADY EXISTS!')}else{_errors.push(\"\")};\r\n            \r\n        }\r\n\r\n        if(_errors.length){setErrors(_errors)};\r\n    }\r\n\r\n    return ( \r\n            <div className= \"page\">\r\n            <h1 className = \"page-title\">Sign Up</h1>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                <FormErrors success ={success} />\r\n                {!!errors.length &&  <FormErrors errors ={errors[4]} />}   \r\n                {!!errors.length &&  <FormErrors errors ={errors[3]} />}   \r\n                <label htmlFor=\"username\" className= \"form_label\">username: </label>\r\n                <input type=\"text\"\r\n                    name=\"username\"\r\n                    className = \"form_input\"\r\n                    value={username}\r\n                    onChange={e =>{setUsername(e.target.value)}}/>\r\n                {!!errors.length &&  <FormErrors errors ={errors[0]} />}    \r\n                <label htmlFor=\"password\" className= \"form_label\">password: </label>\r\n                <input type=\"password\"\r\n                    name = \"password\"\r\n                    className = \"form_input\"\r\n                    value={password}\r\n                    onChange={e =>{setPassword(e.target.value)}}/>\r\n                {!!errors.length &&  <FormErrors errors ={errors[1]} />}   \r\n                <label htmlFor=\"passwordAgain\" className= \"form_label\">password again: </label>\r\n                <input type=\"password\" \r\n                    className = \"form_input\"\r\n                    value={passwordAgain}\r\n                    onChange={e =>{setPasswordAgain(e.target.value)}}/>\r\n                {!!errors.length &&  <FormErrors errors ={errors[2]} />}       \r\n                \r\n                <Button type=\"submit\">Sign Up</Button>\r\n            </form>\r\n        </div>\r\n\r\n         \r\n        \r\n\r\n     );\r\n}\r\n \r\nexport default Signup;","D:\\Github projects\\forum\\client\\src\\Components\\FormErrors.js",["107","108"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst FormErrors = ({success,errors}) => {\r\n    return ( \r\n        <div className=\"form_errors\">\r\n                <ul>\r\n                    <li>{errors}</li> \r\n                    <li>{success}</li> \r\n                </ul>          \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormErrors;","D:\\Github projects\\forum\\client\\src\\Components\\Button.js",["109"],"import React, { Component } from 'react';\r\n\r\nconst Button = ({children,type,logout}) => {\r\n    return ( \r\n        <button className=\"btn\" type = {type} onClick={logout}>\r\n           {children}\r\n        </button>\r\n     );\r\n}\r\n \r\nexport default Button;","D:\\Github projects\\forum\\client\\src\\Pages\\Login.js",["110","111","112","113"],"import React, { Component ,useState, useContext } from 'react';\r\nimport FormErrors from '../Components/FormErrors';\r\nimport Button from '../Components/Button';\r\nimport axios from 'axios';\r\nimport AppContext from '../Contexts/AppContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HttpClient from '../Services/HttpClient';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n    const {user,setUser} = useContext(AppContext);\r\n    \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        setErrors([]);\r\n        let _errors = [];\r\n       \r\n        if(!username){ _errors.push('Username is required!')}else{_errors.push(\"\")};\r\n        if(!password){ _errors.push('Password is required!')}else{_errors.push(\"\")};\r\n        if(_errors.length){setErrors(_errors)};      \r\n        try {\r\n            const data = {\r\n                username,\r\n                password\r\n            };\r\n\r\n            const res = await HttpClient().post('/api/v1/user/login',data);\r\n            const {user,token} = res.data;\r\n            setUser(user);\r\n            localStorage.setItem('token',token);\r\n            // history.push('/');\r\n        } catch (error) {\r\n            const message = error.response.data.message;\r\n            setErrors([message])\r\n        }\r\n    }\r\n\r\n    return ( \r\n            <div className= \"page\">\r\n            <h1 className = \"page-title\">Log In</h1>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n            \r\n                <label htmlFor=\"username\" className= \"form_label\">username: </label>\r\n                <input type=\"text\"\r\n                    required \r\n                    className = \"form_input\"\r\n                    value={username}\r\n                    onChange={e =>{setUsername(e.target.value)}}/>\r\n                 \r\n                <label htmlFor=\"password\" className= \"form_label\">password: </label>\r\n                <input type=\"password\"\r\n                    required \r\n                    className = \"form_input\"\r\n                    value={password}\r\n                    onChange={e =>{setPassword(e.target.value)}}/>\r\n                {!!errors.length &&  <FormErrors errors ={errors[0]} />}   \r\n                     \r\n                \r\n                <Button type= \"submit\">Log In</Button>\r\n            </form>\r\n        </div>\r\n\r\n         \r\n        \r\n\r\n     );\r\n}\r\n \r\nexport default Login;","D:\\Github projects\\forum\\client\\src\\Pages\\Profile.js",["114","115"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PasswordModal from '../Components/PasswordModal';\r\nimport CreatePost from './CreatePost';\r\n\r\n\r\nconst Profile = () => {\r\n    return ( \r\n        <div className= \"page\">\r\n        <h1 className = \"page-title\">Profile</h1>        \r\n        <PasswordModal >Change password</PasswordModal>\r\n        <button className = \"btn\"><Link to= '/create-posts' className= \"post_link\">Create A Post</Link></button>\r\n        <button className = \"btn\"><Link to= '/manage-posts' className= \"post_link\">manage your posts</Link></button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Profile;","D:\\Github projects\\forum\\client\\src\\Components\\PasswordModal.js",["116","117","118"],"import Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useState, useContext, Component } from 'react';\r\nimport AppContext from \"../Contexts/AppContext\";\r\nimport axios from 'axios';\r\nimport FormErrors from \"./FormErrors\"\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nconst PasswordModal = ({children}) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordAgain, setNewPasswordAgain] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const {user, setUser} = useContext(AppContext);\r\n  const [success, setSuccess] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n\r\n  const handleSubmit =async (e) =>{\r\n    e.preventDefault();\r\n    setErrors([]);\r\n    if(newPassword !== newPasswordAgain){setErrors(['Passwords must match'])}else{setErrors([])};\r\n    const data = { \r\n      username : user.username,\r\n      password : newPassword\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/user/change_password',data);\r\n      setSuccess([res.data.message]);  \r\n      setNewPassword(\"\");\r\n      setNewPasswordAgain(\"\");       \r\n      setTimeout(() => history.push('/') , 1000);\r\n    } catch (error) {\r\n      const message = error.response.data.message;\r\n      setErrors([message]);\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Button  onClick={handleShow}>\r\n         {children} \r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Change Password</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form action=\"\" onSubmit ={handleSubmit}>\r\n            <FormErrors success ={success} />\r\n            <label htmlFor=\"newPassword\" className = \"form_label\">New Password : </label>\r\n            <input type=\"password\" \r\n              className = \"form_input\"\r\n              name = \"newPassword\"\r\n              value = {newPassword}\r\n              onChange = {e=>{setNewPassword(e.target.value)}}\r\n            />\r\n            <label htmlFor=\"newPasswordAgain\" className = \"form_label\">New Password Again: </label>\r\n            <input type=\"password\" \r\n              className = \"form_input\"\r\n              name = \"newPasswordAgain\"\r\n              value = {newPasswordAgain}\r\n              onChange = {e=>{setNewPasswordAgain(e.target.value)}}\r\n            />\r\n            {!!errors.length &&  <FormErrors errors ={errors} />}  \r\n            <Button type='submit'>Save Change</Button>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>           \r\n          <Button  onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default PasswordModal;","D:\\Github projects\\forum\\client\\src\\Pages\\createPost.js",["119","120"],"D:\\Github projects\\forum\\client\\src\\Pages\\CreatePost.js",["121","122","123"],"import axios from 'axios';\r\nimport React, { Component ,useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../Components/Button';\r\nimport AppContext from '../Contexts/AppContext';\r\nimport FormErrors from '../Components/FormErrors'\r\nimport HttpClient from '../Services/HttpClient';\r\n\r\nconst CreatePost = () => {\r\n    const history =  useHistory();\r\n    const [title, setTitle] = useState([]);\r\n    const [content, setContent] = useState([]);\r\n    const [success, setSuccess] = useState([]);\r\n    const {user,setUser} = useContext(AppContext);\r\n    const username = user.username;\r\n\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const data ={\r\n                username,\r\n                title,\r\n                content\r\n            };\r\n            \r\n            const res = await HttpClient().post('/api/v1/posts/create_posts',data);\r\n            const message = res.data.message;\r\n            setSuccess(message);\r\n            setTitle([]);\r\n            setContent([]);\r\n            setTimeout(()=>{\r\n                history.push('/home')\r\n            },1500)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n\r\n    };\r\n\r\n    return ( \r\n        <div>\r\n            <form className = \"form_post\"  onSubmit = {handleSubmit}>\r\n                <FormErrors success ={success} />\r\n                <label htmlFor=\"title\" className=\"form_label\">Post Title</label>\r\n                <input type=\"text\" \r\n                    required\r\n                    className = \"form_input\"\r\n                    value ={title}\r\n                    name = \"title\"\r\n                    onChange = {e =>{setTitle(e.target.value)}}\r\n                />\r\n                <label htmlFor=\"content\">Post Content</label>\r\n                <textarea \r\n                    required\r\n                    name=\"content\" \r\n                    id=\"content\" \r\n                    value = {content}\r\n                    onChange = {e =>{setContent(e.target.value)}}\r\n                >\r\n                </textarea>\r\n                <Button type=\"submit\">Post</Button>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CreatePost;","D:\\Github projects\\forum\\client\\src\\Services\\HttpClient.js",["124"],"import axios from 'axios';\r\n\r\n\r\nexport default  () =>{\r\n    const token = localStorage.getItem('token');\r\n\r\n    const defaultOptions = {\r\n        headers: {\r\n            Authorization: token ? `Bearer ${token}`: ''\r\n        }\r\n    };\r\n\r\n//调用函数的时候如果 options 没指定du，就给它赋值zhi {} , {} 是一个空的 Object。\r\n\r\n    return {\r\n        get: (url, options ={}) => axios.get(url, {...defaultOptions,...options}),\r\n        post: (url, data, options={}) => axios.post(url, data,{...defaultOptions,...options}),\r\n        delete: (url,options = {}) => axios.delete(url, {...defaultOptions, ...options})\r\n\r\n    }\r\n};\r\n","D:\\Github projects\\forum\\client\\src\\Pages\\ManagePost.js",["125","126","127"],"import React, { Component , useEffect, useState} from 'react';\r\nimport HttpClient from '../Services/HttpClient';\r\nimport moment from 'moment';\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport AppContext from '../Contexts/AppContext';\r\n\r\nconst ManagePost = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const history = useHistory();\r\n    const {user} = useContext(AppContext);\r\n    \r\n  \r\n    useEffect(() => {\r\n      getPosts();    \r\n    }, []);\r\n  \r\n      \r\n    const getPosts = async ()=>{\r\n      \r\n        const res = await HttpClient().get('/api/v1/posts/manage_posts');\r\n        const posts = res.data;\r\n        setPosts(posts);\r\n        };\r\n\r\n    const deletPosts = async ()=>{\r\n        const postId =document.querySelector('a.delete')\r\n        const res = await HttpClient().delete(`/api/v1/posts/delete_posts/${postId.dataset.id}`);  \r\n        setPosts(posts);\r\n        window.location.reload();\r\n    };\r\n    \r\n    return ( \r\n        <div className= \"page\">\r\n          <h1 className = \"page-title home\"> PERSONAL POSTS   </h1> \r\n          {posts.length > 0 &&\r\n                    \r\n            posts.map((post,index)=>{\r\n                \r\n                const time  = moment(post.createdAt).format('YYYY-MM-DD HH:mm:ss');\r\n                const when = moment(time).fromNow();\r\n                return (\r\n                    <div key={index} className= \"user_post\">\r\n                        <div>\r\n                            <h3 className = \"navbar_submenu-link\" onClick={()=>{history.push(`/posts-detail/${post._id}`)}}>{post.title}</h3>\r\n                            <div className =\"post_content\">{post.content}</div>\r\n                                {/* <p>{index}</p> */}\r\n                                <div className=\"post_tag\">\r\n                                    <span>by {post.username}</span>\r\n                                    <span> {when}</span>\r\n                                </div>\r\n                        </div>\r\n                        <div className = 'delete_post' onClick={deletPosts}>\r\n                            <Link className =\"delete\" data-id= {post._id}><img src=\"/trashcan.svg\" alt=\"delet_post\" /></Link>\r\n                        </div>\r\n                    </div>\r\n                \r\n                )\r\n                })\r\n                }       \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ManagePost;","D:\\Github projects\\forum\\client\\src\\Pages\\PostDetail.js",["128","129"],"D:\\Github projects\\forum\\client\\src\\Components\\AddComment.js",["130","131","132","133"],"import React, { useState, useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport AppContext from '../Contexts/AppContext';\r\nimport Button from '../Components/Button';\r\nimport HttpClient from '../Services/HttpClient';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PostRating from '../Components/Rating';\r\n\r\n\r\n\r\n\r\nconst AddComment = ({postId}) => {\r\n    const {user,setUser} = useContext(AppContext);\r\n    const username = user.username;\r\n    const userId = user._id;\r\n    const [comment, setComment] = useState([]);\r\n    const history = useHistory();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n\r\n\r\n    const handleSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        const data= {\r\n            value,\r\n            postId,\r\n            userId,\r\n            username,\r\n            comment\r\n        };\r\n        const response = await HttpClient().post('/api/v1/comments/add-comment',data);\r\n        setComment(''); \r\n        setValue(0);\r\n        window.location.reload();   \r\n        };\r\n\r\n    return ( \r\n        <div>\r\n            <form className = 'form_comment' onSubmit= {handleSubmit}>\r\n                <label htmlFor=\"conmment\">Comment:</label> \r\n                <textarea\r\n                    className= \"form_textarea\" \r\n                    required\r\n                    value = {comment}\r\n                    name = \"comment\"\r\n                    id = \"comment\"\r\n                    cols=\"20\" rows=\"20\"\r\n                    onChange ={e=>{setComment(e.target.value)}}\r\n                />\r\n                <PostRating name = \"rating\" value = {value} setValue= {setValue}/>\r\n                <Button type=\"submit\">Commit</Button>\r\n            </form>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default AddComment;\r\n\r\n\r\n","D:\\Github projects\\forum\\client\\src\\Components\\Rating.js",[],"D:\\Github projects\\forum\\client\\src\\Components\\Pagination.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"142","line":27,"column":11,"nodeType":"140","messageId":"141","endLine":27,"endColumn":16},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"144","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":12},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"145","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"146","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":13},{"ruleId":"138","severity":1,"message":"147","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"148","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"149","line":10,"column":11,"nodeType":"140","messageId":"141","endLine":10,"endColumn":18},{"ruleId":"138","severity":1,"message":"150","line":14,"column":12,"nodeType":"140","messageId":"141","endLine":14,"endColumn":16},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"151","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":18},{"ruleId":"138","severity":1,"message":"143","line":3,"column":39,"nodeType":"140","messageId":"141","endLine":3,"endColumn":48},{"ruleId":"138","severity":1,"message":"145","line":7,"column":22,"nodeType":"140","messageId":"141","endLine":7,"endColumn":26},{"ruleId":"138","severity":1,"message":"152","line":17,"column":16,"nodeType":"140","messageId":"141","endLine":17,"endColumn":23},{"ruleId":"138","severity":1,"message":"143","line":2,"column":17,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"152","line":13,"column":17,"nodeType":"140","messageId":"141","endLine":13,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":2,"column":17,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"152","line":14,"column":17,"nodeType":"140","messageId":"141","endLine":14,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":4,"column":1,"nodeType":"155","endLine":21,"endColumn":3},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"150","line":11,"column":12,"nodeType":"140","messageId":"141","endLine":11,"endColumn":16},{"ruleId":"138","severity":1,"message":"156","line":28,"column":15,"nodeType":"140","messageId":"141","endLine":28,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":25,"column":8,"nodeType":"159","endLine":25,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":72,"column":47,"nodeType":"163","messageId":"164","endLine":72,"endColumn":49},{"ruleId":"138","severity":1,"message":"148","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"152","line":13,"column":17,"nodeType":"140","messageId":"141","endLine":13,"endColumn":24},{"ruleId":"138","severity":1,"message":"149","line":17,"column":11,"nodeType":"140","messageId":"141","endLine":17,"endColumn":18},{"ruleId":"138","severity":1,"message":"165","line":31,"column":15,"nodeType":"140","messageId":"141","endLine":31,"endColumn":23},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'Component' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'validator' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'CreatePost' is defined but never used.","'setUser' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postDetail' and 'showComments'. Either include them or remove the dependency array.","ArrayExpression",["168"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [postDetail, showComments]",{"range":"171","text":"172"},[758,760],"[postDetail, showComments]"]